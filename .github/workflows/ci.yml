name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set invariant culture to ensure consistent test behavior across platforms
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: true
  LC_ALL: C

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Display .NET info
      run: dotnet --info
    
    - name: List solution files
      run: |
        echo "Solution files found:"
        find . -name "*.sln" -type f
    
    - name: Restore dependencies
      run: dotnet restore Relay.sln
    
    - name: Build solution
      run: dotnet build Relay.sln --no-restore --configuration Release --verbosity minimal
    
    - name: Run tests
      run: |
        dotnet test Relay.sln --no-build --configuration Release \
          --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults/ \
          --logger "trx;LogFileName=test_results.trx"
    
    - name: Upload test results
      uses: actions/upload-artifact@v5
      if: always()
      with:
        name: test-results
        path: ./TestResults/
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false
        verbose: true

  package:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    name: Package NuGet
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore Relay.sln
    
    - name: Build solution
      run: dotnet build Relay.sln --no-restore --configuration Release --verbosity minimal
    
    - name: Create NuGet packages
      run: dotnet pack Relay.sln --no-build --configuration Release --output ./artifacts --verbosity minimal
    
    - name: List generated packages
      run: |
        echo "Generated NuGet packages:"
        ls -la ./artifacts/
    
    - name: Upload NuGet artifacts
      uses: actions/upload-artifact@v5
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
        retention-days: 30